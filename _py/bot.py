import telebot
import pytesseract
import shutil
import os
from _py import sql
from _py import DataProcessor as DP
from telebot import types
try: from PIL import Image
except ImportError: import Image

with open("token.txt", "r+") as f: # –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ telegram token –∏–∑ —Ñ–∞–π–ª–∞
    token = f.readlines()[0].strip() 
bot = telebot.TeleBot(token)
pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'
f_name = "./image.jpg" # –ò–º—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞-–∫–∞—Ä—Ç–∏–Ω–∫–∏
d_name = "./img/" # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫
out_file = "./out.xlsx" # –ò–º—è Excel —Ñ–∞–π–ª–∞
archive_name = "./out" # –ò–º—è –∞—Ä—Ö–∏–≤–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
archive_dir = d_name[:] # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∞—Ä—Ö–∏–≤–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏

sql.createDb() # –°–æ–∑–¥–∞–Ω–∏–µ –ë–î, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
if not os.path.isdir(d_name): # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    os.mkdir(d_name)


def ocr_core(filename): # OCR –∞–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞
    return pytesseract.image_to_string(Image.open(filename), lang='rus+eng')  


def save_image(f_name, d_name): # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤  –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –º–µ—Å—Ç–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
    shutil.copyfile(f_name, d_name + "img" + sql.lastIdInDb() + ".jpg")


def create_archive(f_name, d_name): # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∫–∞—Ä—Ç–∏–Ω–æ–∫
    shutil.make_archive(f_name, 'zip', d_name)


def start():

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    @bot.message_handler(commands=['start'])
    def start(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        markup.add(btn1)
        bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=markup)


    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π-—Ç–µ–∫—Å—Ç
    @bot.message_handler(content_types=['text'])
    def get_text_messages(message):
        if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True) #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.KeyboardButton('–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?')
            btn2 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ-–∞—Ä—Ö–∏–≤ –∫–∞—Ä—Ç–æ—á–µ–∫')
            btn3 = types.KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–∞—Ä—Ç–æ—á–µ–∫')
            markup.add(btn1, btn2, btn3)
            bot.send_message(message.from_user.id, '‚ùì –ó–∞–¥–∞–π—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å', reply_markup=markup) #–æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        elif message.text == '–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?': # –î–æ–ø–∏—Å–∞—Ç—å –∏–Ω—Å—Å—Ç—Ä—É–∫—Ü–∏—é!
            bot.send_message(message.from_user.id, '*–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ*', parse_mode='Markdown')
        elif message.text == '–ü–æ–ª—É—á–∏—Ç—å —Ñ–æ—Ç–æ-–∞—Ä—Ö–∏–≤ –∫–∞—Ä—Ç–æ—á–µ–∫':
            if int(sql.lastIdInDb()) >= 0: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –ë–î
                create_archive(archive_name, archive_dir) # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∫–∞—Ä—Ç–∏–Ω–æ–∫
                bot.send_document(message.from_user.id, open(archive_name + ".zip", "rb")) # –û—Ç–ø—Ä–∞–≤–∫–∞ zip —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 
                bot.send_message(message.from_user.id, f'–§–∞–π–ª {archive_name.lstrip("./")}.zip - –∞—Ä—Ö–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ñ–æ—Ç–æ –≤—Å–µ—Ö –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤–∏–∑–∏—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫.', parse_mode='Markdown')
            else: # –ë–î –ø—É—Å—Ç–∞ -> –∏–∑–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
                bot.send_message(message.from_user.id, f'–ê—Ä—Ö–∏–≤ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω, —Ç.–∫. –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–æ—Ç–æ –≤–∏–∑–∏—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫.', parse_mode='Markdown')
        elif message.text == '–ü–æ–ª—É—á–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–∞—Ä—Ç–æ—á–µ–∫':
            if int(sql.lastIdInDb()) >= 0: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø–∏—Å–µ–π –≤ –ë–î
                sql.excelDb(out_file) # –≠–∫—Å–ø–æ—Ä—Ç –ë–î –≤ Excel
                bot.send_document(message.from_user.id, open(out_file, "rb")) # –û—Ç–ø—Ä–∞–≤–∫–∞ Excel —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é 
                bot.send_message(message.from_user.id, f'–§–∞–π–ª {out_file.lstrip("./")} - —Ç–∞–±–ª–∏—Ü–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –≤—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–∏–∑–∏—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏.', parse_mode='Markdown')
            else: # –ë–î –ø—É—Å—Ç–∞ -> –∏–∑–≤–µ—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
                bot.send_message(message.from_user.id, f'–¢–∞–±–ª–∏—Ü–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞, —Ç.–∫. –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∏–∑–∏—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∞—Ö.', parse_mode='Markdown')  

    @bot.callback_query_handler(func=lambda call: call.data.split(';')[0] == 'Edit note')
    def get_card_number(call):
        cur_card_id = call.data.split(';')[1]
        message = call.message
        chat_id = message.chat.id
        msg_id = message.message_id
        
        markup = types.InlineKeyboardMarkup()
        button_company = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ –ö–æ–º–ø–∞–Ω–∏—è', callback_data='Edit;company;–ö–æ–º–ø–∞–Ω–∏—è;' + cur_card_id + f';{msg_id}')
        button_name = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ –§–ò–û', callback_data='Edit;name;–§–ò–û;' + cur_card_id + f';{msg_id}')
        button_post = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ –î–æ–ª–∂–Ω–æ—Å—Ç—å', callback_data='Edit;post;–î–æ–ª–∂–Ω–æ—Å—Ç—å;' + cur_card_id + f';{msg_id}')
        button_tel1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ –¢–µ–ª. ‚Ññ1', callback_data='Edit;tel1;–¢–µ–ª. ‚Ññ1;' + cur_card_id + f';{msg_id}')
        button_tel2 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ –¢–µ–ª. ‚Ññ2', callback_data='Edit;tel2;–¢–µ–ª. ‚Ññ2;'+ cur_card_id + f';{msg_id}')
        button_email = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ E-mail', callback_data='Edit;email;E-mail;' + cur_card_id + f';{msg_id}')
        button_site = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ –°–∞–π—Ç', callback_data='Edit;site;–°–∞–π—Ç;' + cur_card_id + f';{msg_id}')
        button_comment = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–µ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π', callback_data='Edit;comment;–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π;'+ cur_card_id + f';{msg_id}')
        markup.add(button_company)
        markup.add(button_name)
        markup.add(button_post)
        markup.add(button_tel1)
        markup.add(button_tel2)
        markup.add(button_email)
        markup.add(button_site)
        markup.add(button_comment)

        bot.send_message(chat_id, f"–í—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç–µ –≤–∏–∑–∏—Ç–∫—É - {cur_card_id}\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", reply_markup=markup)

    @bot.callback_query_handler(func=lambda call: call.data.split(';')[0] == 'Edit')
    def edit_btn(call):
        bot.delete_message(call.message.chat.id, call.message.message_id)
        column_ru = call.data.split(';')[2]
        data = call.data

        message = call.message
        chat_id = message.chat.id
        bot.send_message(chat_id, f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –ø–æ–ª–µ {column_ru}')
        bot.register_next_step_handler(message, handler_edit, data)

    def handler_edit(message, data):
        chat_id = message.chat.id
        input_data = message.text
        keyboard = telebot.types.InlineKeyboardMarkup()

        column_ru = data.split(';')[2]
        button_save = telebot.types.InlineKeyboardButton(text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
                                                     callback_data=f'Save;{input_data};{data}')
        button_change = telebot.types.InlineKeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å",
                                                       callback_data=data)
        keyboard.add(button_save, button_change)

        bot.send_message(chat_id, f'–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?', reply_markup=keyboard)

    @bot.callback_query_handler(func=lambda call: call.data.split(';')[0] == 'Save')
    def save_column(call):
        # call - Save;input_data;Edit;column_eng;column_ru;cur_card_id
        data = call.data.split(';')
        key = data[5]
        val = data[1]
        column = data[3]
        sql.updateDb(key, val, column)

        message = call.message
        chat_id = message.chat.id
        bot.send_message(chat_id, f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ")

    @bot.callback_query_handler(func=lambda call: call.data == 'Done')
    def save_column(call):
        message = call.message
        chat_id = message.chat.id
        bot.send_message(chat_id, f"–ö–∞—Ä—Ç–æ—á–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –∂–¥—É –Ω–æ–≤—ã—Ö —Ñ–æ—Ç–æ")


    
    def show_data(data: tuple) -> str:
        res = ''
        names = ('–ö–æ–º–ø–∞–Ω–∏—è', '–§–ò–û', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–¢–µ–ª. ‚Ññ1', '–¢–µ–ª. ‚Ññ2', 'E-mail', '–°–∞–π—Ç', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π')
        for i in range(len(names)):
            res += f'{names[i]}: {data[i]}\n'
        return res

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    @bot.message_handler(content_types=['photo'])
    def photo(message):
        fileID = message.photo[-1].file_id
        file_info = bot.get_file(fileID)
        downloaded_file = bot.download_file(file_info.file_path)
        with open(f_name, 'wb') as new_file:
            new_file.write(downloaded_file)
        raw_data = ocr_core(f_name) # –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω–Ω—ã–µ –∏–∑ OCR
        dp = DP.DataProcessor(raw_data)
        print(dp.dataExtract())
        print(*dp.dataExtract())
        data = (*dp.dataExtract(), "")
        print(str(data))

        # data = ("1", "1", "1", "1", "1", "1", "1", "1") # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        sql.insertDb(data) # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
        save_image(f_name, d_name) # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏

    
        markup = types.InlineKeyboardMarkup()
        cur_card_id = sql.lastIdInDb()
        button1 = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å', callback_data=f'Edit note;{cur_card_id}')
        button2 = types.InlineKeyboardButton('–í—Å–µ –≤–µ—Ä–Ω–æ', callback_data=f'Done')
        markup.add(button1)
        markup.add(button2)

        bot.send_message(message.chat.id, f"–ù–æ–º–µ—Ä –≤–∏–∑–∏—Ç–∫–∏: {cur_card_id}\n" + "–ü–æ–ª—É—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n" + \
            show_data(data).format(message.from_user), reply_markup=markup)

        # ...
        #bot.send_message(message.from_user.id, text=raw_data)

    
        #markup = types.InlineKeyboardMarkup()
        #button1 = types.InlineKeyboardButton("–°–∞–π—Ç –•–∞–±—Ä", url='https://habr.com/ru/all/')
        #markup.add(button1)
        #bot.send_message(message.chat.id, raw_data.format(message.from_user), reply_markup=markup)
        
        
        
        
        
    
    bot.polling(none_stop=False, interval=1) # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —á–∞—Å—Ç—å
